[{"C:\\Projects\\workouttracker\\src\\index.js":"1","C:\\Projects\\workouttracker\\src\\App.js":"2","C:\\Projects\\workouttracker\\src\\reportWebVitals.js":"3","C:\\Projects\\workouttracker\\src\\WalkingComponent.js":"4","C:\\Projects\\workouttracker\\src\\CardioTemplate.js":"5","C:\\Projects\\workouttracker\\src\\BikingComponent.js":"6","C:\\Projects\\workouttracker\\src\\Chart.js":"7","C:\\Projects\\workouttracker\\src\\YearlyMileage.js":"8","C:\\Projects\\workouttracker\\src\\Header.js":"9","C:\\Projects\\workouttracker\\src\\Home.js":"10","C:\\Projects\\workouttracker\\src\\Routes.js":"11","C:\\Projects\\workouttracker\\src\\Stats.js":"12","C:\\Projects\\workouttracker\\src\\About.js":"13","C:\\Projects\\workouttracker\\src\\MonthlyMileage.js":"14","C:\\Projects\\workouttracker\\src\\Route.js":"15"},{"size":543,"mtime":1607809881784,"results":"16","hashOfConfig":"17"},{"size":4623,"mtime":1627794352566,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607049619344,"results":"19","hashOfConfig":"17"},{"size":651,"mtime":1608588362705,"results":"20","hashOfConfig":"17"},{"size":1912,"mtime":1627528123060,"results":"21","hashOfConfig":"17"},{"size":1520,"mtime":1626652049775,"results":"22","hashOfConfig":"17"},{"size":625,"mtime":1622769528048,"results":"23","hashOfConfig":"17"},{"size":3210,"mtime":1627791250900,"results":"24","hashOfConfig":"17"},{"size":1704,"mtime":1628389805059,"results":"25","hashOfConfig":"17"},{"size":719,"mtime":1627795024996,"results":"26","hashOfConfig":"17"},{"size":3120,"mtime":1629861445279,"results":"27","hashOfConfig":"17"},{"size":2537,"mtime":1629862081231,"results":"28","hashOfConfig":"17"},{"size":198,"mtime":1627791019843,"results":"29","hashOfConfig":"17"},{"size":2785,"mtime":1627849351767,"results":"30","hashOfConfig":"17"},{"size":687,"mtime":1629861166018,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ucdrbk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\workouttracker\\src\\index.js",[],["65","66"],"C:\\Projects\\workouttracker\\src\\App.js",["67","68","69"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Header from './Header';\nimport Stats from \"./Stats\";\nimport Routes from './Routes';\nimport About from './About';\n\nfunction App(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [activities, setActivities] = useState({});\n  const [roadDistance, setRoadDistance] = useState(0);\n  const [eDistance, setEDistance] = useState(0);\n  const [virtualDistance, setVirtualDistance] = useState(0);\n  const [januaryDistance, setJanuaryDistance] = useState(0);\n  const [februaryDistance, setFebruaryDistance] = useState(0);\n  const [marchDistance, setMarchDistance] = useState(0);\n  const [aprilDistance, setAprilDistance] = useState(0);\n  const [mayDistance, setMayDistance] = useState(0);\n  const [juneDistance, setJuneDistance] = useState(0);\n  const [julyDistance, setJulyDistance] = useState(0);\n  const [augustDistance, setAugustDistance] = useState(0);\n\n  const REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\n  const REACT_APP_CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const REACT_APP_REFRESH_TOKEN = process.env.REACT_APP_REFRESH_TOKEN;\n\n  let epochString = 1609459200;\n\n  // January 1st, 2021 epoch timestamp 1609459200\n\n  // Strava credentials\n  let clientID = REACT_APP_CLIENT_ID;\n  const clientSecret = REACT_APP_API_KEY;\n\n  //refresh token and call address\n  const refreshToken = REACT_APP_REFRESH_TOKEN;\n  const callRefresh = `https://www.strava.com/oauth/token?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`;\n\n  // endpoint for read-all activities. temporary token is added in getActivities()\n  const callActivities = `https://www.strava.com/api/v3/athlete/activities?after=${epochString}&per_page=200&access_token=`;\n\n  // Use refresh token to get current access token\n  // look into useEffect and lifecycle\n  // could you store access token and only refresh if needed? look into\n  useEffect(() => {\n    fetch(callRefresh, {\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((result) => getActivities(result.access_token));\n  }, [callRefresh]);\n\n  //use current access token to call all activities\n  function getActivities(access) {\n    fetch(callActivities + access)\n      .then((res) => res.json())\n      .then((data) => {\n        setActivities(data);\n        setIsLoading((prev) => !prev);\n        setRoadDistance(calculateDistance(data, \"Ride\"));\n        setEDistance(calculateDistance(data, \"EBikeRide\"));\n        setVirtualDistance(calculateDistance(data, \"VirtualRide\"));\n        setJanuaryDistance(getMonthlyActivities(data, \"2021-01\"));\n        setFebruaryDistance(getMonthlyActivities(data, \"2021-02\"));\n        setMarchDistance(getMonthlyActivities(data, \"2021-03\"));\n        setAprilDistance(getMonthlyActivities(data, \"2021-04\"));\n        setMayDistance(getMonthlyActivities(data, \"2021-05\"));\n        setJuneDistance(getMonthlyActivities(data, \"2021-06\"));\n        setJulyDistance(getMonthlyActivities(data, \"2021-07\"));\n        setAugustDistance(getMonthlyActivities(data, \"2021-08\"));\n      })\n      .catch((e) => console.log(e));\n  }\n\n  const calculateDistance = (activities, type) => {\n    let distanceTotal = 0;\n    activities.forEach((ride) => {\n      if (ride.type === type) {\n        distanceTotal = distanceTotal + ride.distance;\n      }\n    });\n    return (distanceTotal / 1609).toFixed(2);\n  };\n\n  let distances = {\n    roadDistance: roadDistance,\n    eDistance: eDistance,\n    virtualDistance: virtualDistance,\n    januaryDistance: januaryDistance,\n    februaryDistance: februaryDistance,\n    marchDistance: marchDistance,\n    aprilDistance: aprilDistance,\n    mayDistance: mayDistance,\n    juneDistance: juneDistance,\n    julyDistance: julyDistance,\n    augustDistance: augustDistance\n  };\n\n  const getMonthlyActivities = (activities, month) => {\n    let distanceTotal = 0;\n    activities.forEach((ride) => {\n      if (ride.start_date.startsWith(month) && ride.type.includes(\"Ride\")) {\n        distanceTotal = distanceTotal + ride.distance;\n      }\n    });\n    return distanceTotal / 1609;\n  };\n  \n  return (\n      <Router>\n        <Header distances={distances} />\n        <Switch>\n          <Route path='/' exact><Home distances={distances} /></Route>\n          <Route path='/stats'><Stats distances={distances} /></Route>\n          <Route path='/routes' component={Routes} />\n          <Route path='/about' component={About} />\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","C:\\Projects\\workouttracker\\src\\reportWebVitals.js",[],"C:\\Projects\\workouttracker\\src\\WalkingComponent.js",[],["70","71"],"C:\\Projects\\workouttracker\\src\\CardioTemplate.js",[],"C:\\Projects\\workouttracker\\src\\BikingComponent.js",[],"C:\\Projects\\workouttracker\\src\\Chart.js",[],"C:\\Projects\\workouttracker\\src\\YearlyMileage.js",[],"C:\\Projects\\workouttracker\\src\\Header.js",[],"C:\\Projects\\workouttracker\\src\\Home.js",[],"C:\\Projects\\workouttracker\\src\\Routes.js",[],"C:\\Projects\\workouttracker\\src\\Stats.js",[],"C:\\Projects\\workouttracker\\src\\About.js",[],"C:\\Projects\\workouttracker\\src\\MonthlyMileage.js",[],"C:\\Projects\\workouttracker\\src\\Route.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":16,"column":10,"nodeType":"78","messageId":"79","endLine":16,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":17,"column":10,"nodeType":"78","messageId":"79","endLine":17,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":58,"column":6,"nodeType":"83","endLine":58,"endColumn":19,"suggestions":"84"},{"ruleId":"72","replacedBy":"85"},{"ruleId":"74","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'activities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActivities'. Either include it or remove the dependency array.","ArrayExpression",["89"],["87"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [callRefresh, getActivities]",{"range":"92","text":"93"},[2233,2246],"[callRefresh, getActivities]"]