[{"C:\\Projects\\workouttracker\\src\\index.js":"1","C:\\Projects\\workouttracker\\src\\App.js":"2","C:\\Projects\\workouttracker\\src\\reportWebVitals.js":"3","C:\\Projects\\workouttracker\\src\\WalkingComponent.js":"4","C:\\Projects\\workouttracker\\src\\CardioTemplate.js":"5","C:\\Projects\\workouttracker\\src\\BikingComponent.js":"6","C:\\Projects\\workouttracker\\src\\Chart.js":"7","C:\\Projects\\workouttracker\\src\\LineChart.js":"8","C:\\Projects\\workouttracker\\src\\YearlyMileage.js":"9"},{"size":543,"mtime":1607809881784,"results":"10","hashOfConfig":"11"},{"size":4574,"mtime":1619487573290,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607049619344,"results":"13","hashOfConfig":"11"},{"size":651,"mtime":1608588362705,"results":"14","hashOfConfig":"11"},{"size":1979,"mtime":1616369052341,"results":"15","hashOfConfig":"11"},{"size":1317,"mtime":1613366900686,"results":"16","hashOfConfig":"11"},{"size":609,"mtime":1608571797003,"results":"17","hashOfConfig":"11"},{"size":2566,"mtime":1617403724140,"results":"18","hashOfConfig":"11"},{"size":2875,"mtime":1617733729153,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ucdrbk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Projects\\workouttracker\\src\\index.js",[],["42","43"],"C:\\Projects\\workouttracker\\src\\App.js",["44","45","46","47"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Biking from './BikingComponent';\nimport LineChart from './LineChart';\nimport YearlyMileage from './YearlyMileage';\n\n\n\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [activities, setActivities] = useState({})\n  const [roadDistance, setRoadDistance] = useState(0)\n  const [eDistance, setEDistance] = useState(0)\n  const [virtualDistance, setVirtualDistance] = useState(0)\n  const [januaryDistance, setJanuaryDistance] = useState(0);\n  const [februaryDistance, setFebruaryDistance] = useState(0);\n  const [marchDistance, setMarchDistance] = useState(0);\n  const [aprilDistance, setAprilDistance] = useState(0);\n\n  const REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\n  const REACT_APP_CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const REACT_APP_REFRESH_TOKEN = process.env.REACT_APP_REFRESH_TOKEN;\n\n  let today = new Date();\n  let month = today.toLocaleString('default', {month: 'long'});\n  let date = month + ' ' + today.getDate() + ', ' + today.getFullYear();\n  let epochString = 1609459200; \n  // January 1st, 2020 epocj timestamp 1577836800\n  // December 1st, 2020 epoch timestamp 1606780800\n  // January 1st, 2021 epoch timestamp 1609459200\n\n  // Strava credentials\n  let clientID = REACT_APP_CLIENT_ID;\n  const clientSecret = REACT_APP_API_KEY;\n\n  //refresh token and call address\n  const refreshToken = REACT_APP_REFRESH_TOKEN;\n  const callRefresh = `https://www.strava.com/oauth/token?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`\n\n\n  // endpoint for read-all activities. temporary token is added in getActivities()\n  const callActivities = `https://www.strava.com/api/v3/athlete/activities?after=${epochString}&per_page=200&access_token=`\n \n\n  // Use refresh token to get current access token\n  // look into useEffect and lifecycle\n  // could you store access token and only refresh if needed? look into\n  useEffect(() => {\n    fetch(callRefresh, {\n      method: 'POST'\n    })\n    .then(res => res.json())\n    .then(result => getActivities(result.access_token))\n  }, [callRefresh])\n\n  //use current access token to call all activities\n  function getActivities(access){\n      fetch(callActivities + access)\n      .then(res => res.json())\n      .then((data) => {\n          setActivities(data) \n          setIsLoading(prev => !prev)\n          setRoadDistance(calculateDistance(data, 'Ride'))\n          setEDistance(calculateDistance(data, 'EBikeRide'))\n          setVirtualDistance(calculateDistance(data, 'VirtualRide'))\n          setJanuaryDistance(getMonthlyActivities(data, '2021-01'));\n          setFebruaryDistance(getMonthlyActivities(data, '2021-02'));\n          setMarchDistance(getMonthlyActivities(data, '2021-03'));\n          setAprilDistance(getMonthlyActivities(data, '2021-04'));\n        }\n      )\n      .catch(e => console.log(e))\n  }\n\n  const calculateDistance = (activities, type) => {\n      let distanceTotal = 0;\n      activities.forEach((ride) => {\n        if(ride.type === type) {\n          distanceTotal = distanceTotal + ride.distance;\n        }\n      })\n      return (distanceTotal / 1609).toFixed(2)\n\n  }\n\n  let distances = {\n    roadDistance: roadDistance,\n    eDistance: eDistance,\n    virtualDistance: virtualDistance,\n    januaryDistance: januaryDistance,\n    februaryDistance: februaryDistance,\n    marchDistance: marchDistance,\n    aprilDistance: aprilDistance\n  }\n\n  const getMonthlyActivities = (activities, month) => {\n    let distanceTotal = 0;\n    activities.forEach((ride) => {\n        if(ride.start_date.startsWith(month) && ride.type.includes('Ride')) {\n          distanceTotal = distanceTotal + ride.distance;\n        }  \n    })\n    return (distanceTotal / 1609);\n  }\n\n  return (\n    <div className=\"App\" style={{backgroundColor: '#191919', color: 'white'}}>\n      <h1>Stender's Workout Tracker</h1>\n      <h3>{date}</h3>\n      <h4>{ (parseFloat(distances.roadDistance) + parseFloat(distances.eDistance) + parseFloat(distances.virtualDistance)).toFixed(2) } Total Miles</h4>\n      <div className=\"container-fluid\">\n              <Biking exerciseType=\"Biking\" distances={distances} />\n        <br /><br /><br />\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col-8\">\n            {/* <LineChart distances={ distances } /> */}\n            <YearlyMileage distances={ distances } />\n          </div>\n          <div className=\"col-2\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Projects\\workouttracker\\src\\reportWebVitals.js",[],"C:\\Projects\\workouttracker\\src\\WalkingComponent.js",[],["48","49"],"C:\\Projects\\workouttracker\\src\\CardioTemplate.js",[],"C:\\Projects\\workouttracker\\src\\BikingComponent.js",[],"C:\\Projects\\workouttracker\\src\\Chart.js",[],["50","51"],"C:\\Projects\\workouttracker\\src\\LineChart.js",[],"C:\\Projects\\workouttracker\\src\\YearlyMileage.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":17},{"ruleId":"56","severity":1,"message":"60","line":12,"column":10,"nodeType":"58","messageId":"59","endLine":12,"endColumn":19},{"ruleId":"56","severity":1,"message":"61","line":13,"column":10,"nodeType":"58","messageId":"59","endLine":13,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":56,"column":6,"nodeType":"64","endLine":56,"endColumn":19,"suggestions":"65"},{"ruleId":"52","replacedBy":"66"},{"ruleId":"54","replacedBy":"67"},{"ruleId":"52","replacedBy":"68"},{"ruleId":"54","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'LineChart' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'activities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActivities'. Either include it or remove the dependency array.","ArrayExpression",["72"],["70"],["71"],["70"],["71"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [callRefresh, getActivities]",{"range":"75","text":"76"},[2152,2165],"[callRefresh, getActivities]"]