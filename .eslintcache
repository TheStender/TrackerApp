[{"C:\\Projects\\workouttracker\\src\\index.js":"1","C:\\Projects\\workouttracker\\src\\App.js":"2","C:\\Projects\\workouttracker\\src\\reportWebVitals.js":"3","C:\\Projects\\workouttracker\\src\\WalkingComponent.js":"4","C:\\Projects\\workouttracker\\src\\CardioTemplate.js":"5","C:\\Projects\\workouttracker\\src\\BikingComponent.js":"6","C:\\Projects\\workouttracker\\src\\Chart.js":"7","C:\\Projects\\workouttracker\\src\\YearlyMileage.js":"8","C:\\Projects\\workouttracker\\src\\Header.js":"9","C:\\Projects\\workouttracker\\src\\Home.js":"10","C:\\Projects\\workouttracker\\src\\Routes.js":"11","C:\\Projects\\workouttracker\\src\\Stats.js":"12","C:\\Projects\\workouttracker\\src\\About.js":"13","C:\\Projects\\workouttracker\\src\\MonthlyMileage.js":"14","C:\\Projects\\workouttracker\\src\\Route.js":"15","C:\\Projects\\workouttracker\\src\\MonthlyStats.js":"16"},{"size":543,"mtime":1607809881784,"results":"17","hashOfConfig":"18"},{"size":5950,"mtime":1704232172696,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607049619344,"results":"20","hashOfConfig":"18"},{"size":651,"mtime":1608588362705,"results":"21","hashOfConfig":"22"},{"size":2045,"mtime":1672696029685,"results":"23","hashOfConfig":"18"},{"size":1560,"mtime":1672619474072,"results":"24","hashOfConfig":"18"},{"size":535,"mtime":1672619144782,"results":"25","hashOfConfig":"18"},{"size":5591,"mtime":1704233440203,"results":"26","hashOfConfig":"18"},{"size":1704,"mtime":1662527685138,"results":"27","hashOfConfig":"18"},{"size":719,"mtime":1671330374578,"results":"28","hashOfConfig":"18"},{"size":4083,"mtime":1651699258797,"results":"29","hashOfConfig":"18"},{"size":1100,"mtime":1672508896984,"results":"30","hashOfConfig":"18"},{"size":198,"mtime":1627791019843,"results":"31","hashOfConfig":"18"},{"size":5474,"mtime":1704159561421,"results":"32","hashOfConfig":"18"},{"size":687,"mtime":1629861166018,"results":"33","hashOfConfig":"18"},{"size":4334,"mtime":1704246883704,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"xmpueg",{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"ucdrbk",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\workouttracker\\src\\index.js",[],["70","71"],"C:\\Projects\\workouttracker\\src\\App.js",["72","73","74"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Header from \"./Header\";\nimport Stats from \"./Stats\";\nimport Routes from \"./Routes\";\nimport About from \"./About\";\n\nfunction App(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [activities, setActivities] = useState({});\n  const [roadDistance, setRoadDistance] = useState(0);\n  const [eDistance, setEDistance] = useState(0);\n  const [virtualDistance, setVirtualDistance] = useState(0);\n  const [januaryDistance, setJanuaryDistance] = useState(0);\n  const [februaryDistance, setFebruaryDistance] = useState(0);\n  const [marchDistance, setMarchDistance] = useState(0);\n  const [aprilDistance, setAprilDistance] = useState(0);\n  const [mayDistance, setMayDistance] = useState(0);\n  const [juneDistance, setJuneDistance] = useState(0);\n  const [julyDistance, setJulyDistance] = useState(0);\n  const [augustDistance, setAugustDistance] = useState(0);\n  const [septemberDistance, setSeptemberDistance] = useState(0);\n  const [octoberDistance, setOctoberDistance] = useState(0);\n  const [novemberDistance, setNovemberDistance] = useState(0);\n  const [decemberDistance, setDecemberDistance] = useState(0);\n\n  const [roadElevation, setRoadElevation] = useState(0);\n  const [eElevation, setEElevation] = useState(0);\n  const [virtualElevation, setVirtualElevation] = useState(0);\n\n  const REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\n  const REACT_APP_CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const REACT_APP_REFRESH_TOKEN = process.env.REACT_APP_REFRESH_TOKEN;\n\n  let epochString = 1704067260;\n\n  // Strava credentials\n  let clientID = REACT_APP_CLIENT_ID;\n  const clientSecret = REACT_APP_API_KEY;\n\n  //refresh token and call address\n  const refreshToken = REACT_APP_REFRESH_TOKEN;\n  const callRefresh = `https://www.strava.com/oauth/token?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`;\n\n  // endpoint for read-all activities. temporary token is added in getActivities()\n  const callActivities = `https://www.strava.com/api/v3/athlete/activities?after=${epochString}&per_page=200&access_token=`;\n\n  // Use refresh token to get current access token\n  useEffect(() => {\n    fetch(callRefresh, {\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((result) => getActivities(result.access_token));\n  }, [callRefresh]);\n\n  //use current access token to call all activities\n  function getActivities(access) {\n    fetch(callActivities + access)\n      .then((res) => res.json())\n      .then((data) => {\n        setActivities(data);\n        setIsLoading((prev) => !prev);\n        setRoadDistance(calculateDistance(data, \"Ride\"));\n        setEDistance(calculateDistance(data, \"EBikeRide\"));\n        setVirtualDistance(calculateDistance(data, \"VirtualRide\"));\n        setJanuaryDistance(getMonthlyActivities(data, \"2024-01\"));\n        setFebruaryDistance(getMonthlyActivities(data, \"2024-02\"));\n        setMarchDistance(getMonthlyActivities(data, \"2024-03\"));\n        setAprilDistance(getMonthlyActivities(data, \"2024-04\"));\n        setMayDistance(getMonthlyActivities(data, \"2024-05\"));\n        setJuneDistance(getMonthlyActivities(data, \"2024-06\"));\n        setJulyDistance(getMonthlyActivities(data, \"2024-07\"));\n        setAugustDistance(getMonthlyActivities(data, \"2024-08\"));\n        setSeptemberDistance(getMonthlyActivities(data, \"2024-09\"));\n        setOctoberDistance(getMonthlyActivities(data, \"2024-10\"));\n        setNovemberDistance(getMonthlyActivities(data, \"2024-11\"));\n        setDecemberDistance(getMonthlyActivities(data, \"2024-12\"));\n        setRoadElevation(getElevationGain(data, \"Ride\"));\n        setEElevation(getElevationGain(data, \"EBikeRide\"));\n        setVirtualElevation(getElevationGain(data, \"VirtualRide\"));\n      })\n      .catch((e) => console.log(e));\n  }\n\n  const calculateDistance = (activities, type) => {\n    let distanceTotal = 0;\n    activities.forEach((ride) => {\n      if (ride.type === type) {\n        distanceTotal = distanceTotal + ride.distance;\n      }\n    });\n    return (distanceTotal / 1609).toFixed(2);\n  };\n\n  let getElevationGain = (activities, type) => {\n    let totalElevation = 0;\n    activities.forEach((ride) => {\n      if (ride.type === type) {\n        totalElevation = totalElevation + ride.total_elevation_gain;\n      }\n    });\n    return (totalElevation * 3.281).toFixed(0);\n  };\n\n  let distances = {\n    roadDistance: roadDistance,\n    eDistance: eDistance,\n    virtualDistance: virtualDistance,\n    januaryDistance: januaryDistance,\n    februaryDistance: februaryDistance,\n    marchDistance: marchDistance,\n    aprilDistance: aprilDistance,\n    mayDistance: mayDistance,\n    juneDistance: juneDistance,\n    julyDistance: julyDistance,\n    augustDistance: augustDistance,\n    septemberDistance: septemberDistance,\n    octoberDistance: octoberDistance,\n    novemberDistance: novemberDistance,\n    decemberDistance: decemberDistance,\n  };\n\n  let elevation = {\n    roadElevation: roadElevation,\n    eElevation: eElevation,\n    virtualElevation: virtualElevation,\n  };\n\n  const getMonthlyActivities = (activities, month) => {\n    let distanceTotal = 0;\n    activities.forEach((ride) => {\n      if (ride.start_date.startsWith(month) && ride.type.includes(\"Ride\")) {\n        distanceTotal = distanceTotal + ride.distance;\n      }\n    });\n    return distanceTotal / 1609;\n  };\n\n  return (\n    <Router>\n      <Header distances={distances} />\n      <Switch>\n        <Route path='/' exact>\n          <Home distances={distances} />\n        </Route>\n        <Route path='/stats'>\n          <Stats distances={distances} elevation={elevation} />\n        </Route>\n        <Route path='/routes' component={Routes} />\n        <Route path='/about' component={About} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Projects\\workouttracker\\src\\reportWebVitals.js",[],"C:\\Projects\\workouttracker\\src\\WalkingComponent.js",[],["75","76"],"C:\\Projects\\workouttracker\\src\\CardioTemplate.js",[],"C:\\Projects\\workouttracker\\src\\BikingComponent.js",[],"C:\\Projects\\workouttracker\\src\\Chart.js",[],"C:\\Projects\\workouttracker\\src\\YearlyMileage.js",[],"C:\\Projects\\workouttracker\\src\\Header.js",[],"C:\\Projects\\workouttracker\\src\\Home.js",[],"C:\\Projects\\workouttracker\\src\\Routes.js",[],"C:\\Projects\\workouttracker\\src\\Stats.js",[],"C:\\Projects\\workouttracker\\src\\About.js",[],"C:\\Projects\\workouttracker\\src\\MonthlyMileage.js",[],"C:\\Projects\\workouttracker\\src\\Route.js",[],"C:\\Projects\\workouttracker\\src\\MonthlyStats.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":13,"column":10,"nodeType":"83","messageId":"84","endLine":13,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":58,"column":6,"nodeType":"88","endLine":58,"endColumn":19,"suggestions":"89"},{"ruleId":"77","replacedBy":"90"},{"ruleId":"79","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'activities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActivities'. Either include it or remove the dependency array.","ArrayExpression",["94"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [callRefresh, getActivities]",{"range":"97","text":"98"},[2488,2501],"[callRefresh, getActivities]"]